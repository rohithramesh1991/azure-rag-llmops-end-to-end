name: CI-CD (prod only)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  id-token: write
  contents: read
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }
      - name: Install
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
      - name: Run tests
        run: pytest --cov=webapp --cov-report=term-missing -q

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build image
        run: docker build -t ghcr.io/${{ github.repository }}:${{ github.sha }} .
      - name: Push image
        run: docker push ghcr.io/${{ github.repository }}:${{ github.sha }}

  deploy-prod:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: prod   # uses Environment "prod" and its secrets (if any)
    steps:
      - uses: actions/checkout@v4

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get AKS context (prod)
        uses: azure/aks-set-context@v4
        with:
          resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}
          cluster-name:   ${{ secrets.AKS_CLUSTER_NAME }}

      - name: Install kustomize
        run: |
          curl -sL https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh | bash
          sudo mv kustomize /usr/local/bin/

      - name: Create/Update namespace & app secret (prod)
        run: |
          kubectl create ns rag-prod --dry-run=client -o yaml | kubectl apply -f -
          kubectl create secret generic app-config \
            --from-literal=OPENAI_API_BASE='${{ secrets.OPENAI_API_BASE }}' \
            --from-literal=OPENAI_API_KEY='${{ secrets.OPENAI_API_KEY }}' \
            --from-literal=OPENAI_API_VERSION='${{ secrets.OPENAI_API_VERSION }}' \
            --from-literal=CHAT_DEPLOYMENT='${{ secrets.CHAT_DEPLOYMENT }}' \
            --from-literal=EMBEDDING_DEPLOYMENT='${{ secrets.EMBEDDING_DEPLOYMENT }}' \
            --from-literal=SEARCH_SERVICE_NAME='${{ secrets.SEARCH_SERVICE_NAME }}' \
            --from-literal=SEARCH_API_KEY='${{ secrets.SEARCH_API_KEY }}' \
            --from-literal=SEARCH_INDEX_NAME='${{ secrets.SEARCH_INDEX_NAME }}' \
            -n rag-prod --dry-run=client -o yaml | kubectl apply -f -

      - name: Set image tag & deploy prod overlay
        working-directory: k8s/overlays/prod
        run: |
          kustomize edit set image ghcr.io/${{ github.repository }}=ghcr.io/${{ github.repository }}:${{ github.sha }}
          kubectl apply -k .
